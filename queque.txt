#include <stdio.h>
#include <stdlib.h>

#define MAX 100  // Define a maximum fixed size for the queue

int queue[MAX];  // Array to store queue elements
int front = -1;  // Index of the front element
int rear = -1;   // Index of the rear element

// Function to add an element to the queue
void enqueue(int value) {
    // Check if the queue is full
    if (rear == MAX - 1) {
        printf("Queue Overflow\n");
        return;
    }
    // If it's the first element being added
    if (front == -1) {
        front = 0;  // Set front to 0
    }
    rear++;  // Move rear to the next index
    queue[rear] = value;  // Add the new element at the rear
    printf("Enqueued %d\n", value);
}

// Function to remove an element from the queue
int dequeue() {
    // Check if the queue is empty
    if (front == -1) {
        printf("Queue Underflow\n");
        return -1;  // Return -1 to indicate an error
    }
    int value = queue[front];  // Get the front element
    // If the queue has only one element, reset front and rear
    if (front == rear) {
        front = -1;  // Reset front and rear when the queue becomes empty
        rear = -1;
    } else {
        front++;  // Move front to the next index
    }
    printf("Dequeued %d\n", value);
    return value;
}

// Function to peek at the front element of the queue
int peek() {
    // Check if the queue is empty
    if (front == -1) {
        printf("Queue is empty\n");
        return -1;  // Return -1 to indicate an error
    }
    return queue[front];  // Return the front element
}

// Function to display all elements in the queue
void display() {
    // Check if the queue is empty
    if (front == -1) {
        printf("Queue is empty\n");
        return;
    }
    printf("Queue elements: ");
    for (int i = front; i <= rear; i++) {
        printf("%d ", queue[i]);
    }
    printf("\n");
}

// Main function with a menu for queue operations
int main() {
    int choice, value;

    while (1) {
        printf("\nChoose an operation:\n");
        printf("1. Enqueue\n");
        printf("2. Dequeue\n");
        printf("3. Peek\n");
        printf("4. Display\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d",&choice);
    

        switch (choice) {
            case 1:
                printf("Enter the value to enqueue: ");
                scanf("%d",&value);
                enqueue(value);
                break;
            case 2:
                dequeue();
                break;
            case 3:
                printf("Front element is: %d\n", peek());
                break;
            case 4:
                display();
                break;
            case 5:
                printf("Exiting...\n");
                exit(0);  // Exit the program
            default:
                printf("Invalid choice, please try again.\n");
        }
    }

    return 0;
}
